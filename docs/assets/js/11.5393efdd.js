(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{395:function(t,a,n){"use strict";n.r(a);var s=n(54),e=Object(s.a)({},(function(){var t=this,a=t.$createElement,n=t._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"pennylane-plugin"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#pennylane-plugin"}},[t._v("#")]),t._v(" Pennylane plugin")]),t._v(" "),n("p",[t._v("Damavand enters the quantum simulators community after many others. Among the most popular quantum circuit simulators\nwe can cite "),n("a",{attrs:{href:"https://pennylane.ai/",target:"_blank",rel:"noopener noreferrer"}},[t._v("PennyLane"),n("OutboundLink")],1),t._v(": a python library developped by the canadian company "),n("a",{attrs:{href:"https://xanadu.ai",target:"_blank",rel:"noopener noreferrer"}},[t._v("Xanadu"),n("OutboundLink")],1),t._v("\nspecialized in photonics hardware. PennyLane integrates gradient descent routines and many other features that makes it\nthe most popular and efficient library to push research in the field of "),n("strong",[t._v("Quantum Machine Learning")]),t._v(".")]),t._v(" "),n("p",[t._v("It was thus legitimate to integrate damavand to PennyLane through a plugin: "),n("strong",[t._v("pennylane-damavand")]),t._v(".\nThis page shows presents how damavand can be leveraged on supercomputers with all the functionalities of pennylane.")]),t._v(" "),n("h2",{attrs:{id:"gradient-descent"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#gradient-descent"}},[t._v("#")]),t._v(" Gradient Descent")]),t._v(" "),n("p",[t._v("One of the main features of PennyLane is to integrate gradient descent schemes.")]),t._v(" "),n("p",{attrs:{align:"center"}},[n("img",{attrs:{src:"/damavand_gradient_descent.png",width:"400em"}})]),t._v(" "),n("div",{staticClass:"language-python extra-class"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[t._v("num_qubits "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("\nnum_layers "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# initialize device with damavand.qubit backend")]),t._v("\ndev "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" qml"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("device"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"damavand.qubit"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" wires"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("num_qubits"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token decorator annotation punctuation"}},[t._v("@qml"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("qnode")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dev"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("circuit")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# build some layers")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" l "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("range")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num_layers"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" \n        qml"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("RX"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("np"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pi"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" wires"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("qml"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("expval"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("qml"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("PauliZ"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("w"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" w "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("range")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num_qubits"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\nresult "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" circuit"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])])}),[],!1,null,null,null);a.default=e.exports}}]);